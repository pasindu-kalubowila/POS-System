package GUI;

import Database.DB;
import Model.Save;
import Model.Validation;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.io.File;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

public class Invoice_Digital_Printing extends javax.swing.JFrame {

    private final DecimalFormat decimalformat = new DecimalFormat("#,##0.00");
    private final SimpleDateFormat dateFomrmat = new SimpleDateFormat("yyyy-MM-dd");

    private Main menu;
    private String customerId;
    private String printPrice_id;
    private double price;

    public Invoice_Digital_Printing() {
        initComponents();
        jLabel1.grabFocus();
        generateID();
        tableSettings();
        loadCustomers();
        loadPrintTypes();
        loadPrintQualities();
    }

    public Invoice_Digital_Printing(Main m) {
        this();
        this.menu = m;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panel = new javax.swing.JPanel();
        qualityOfPrint = new javax.swing.JComboBox<>();
        invoice_ID = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        subTotal = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        netTotal = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        btn_Cancel = new javax.swing.JButton();
        btn_Save = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        balance = new javax.swing.JTextField();
        customer_Name = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        paidAmount = new javax.swing.JFormattedTextField();
        printType = new javax.swing.JComboBox<>();
        discount = new javax.swing.JFormattedTextField();
        height_of_banner = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        add_customer = new javax.swing.JButton();
        invoice_Type = new javax.swing.JComboBox<>();
        width_of_banner = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setPreferredSize(new java.awt.Dimension(1080, 660));
        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        qualityOfPrint.setEditable(true);
        qualityOfPrint.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        qualityOfPrint.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select -" }));
        qualityOfPrint.setFocusable(false);
        qualityOfPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qualityOfPrintActionPerformed(evt);
            }
        });
        panel.add(qualityOfPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 200, 25));

        invoice_ID.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        invoice_ID.setForeground(new java.awt.Color(153, 0, 0));
        invoice_ID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        panel.add(invoice_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 40, 220, 30));

        jLabel24.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(66, 73, 73));
        jLabel24.setText("Customer");
        panel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 80, 25));

        subTotal.setEditable(false);
        subTotal.setBackground(new java.awt.Color(255, 255, 255));
        subTotal.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        subTotal.setForeground(new java.awt.Color(39, 55, 70));
        subTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        subTotal.setText("0");
        panel.add(subTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 540, 200, 30));

        jLabel28.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(66, 73, 73));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Sub Total");
        panel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 540, 60, 30));

        jLabel34.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(66, 73, 73));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Discount  (%)");
        panel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 580, 90, 30));

        jLabel36.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(66, 73, 73));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Net Total");
        panel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 620, 60, 30));

        netTotal.setEditable(false);
        netTotal.setBackground(new java.awt.Color(255, 255, 255));
        netTotal.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        netTotal.setForeground(new java.awt.Color(39, 55, 70));
        netTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        netTotal.setText("0");
        panel.add(netTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 620, 200, 30));

        jLabel37.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(66, 73, 73));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel37.setText("Paid");
        panel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 540, 60, 30));

        btn_Cancel.setBackground(new java.awt.Color(179, 182, 183));
        btn_Cancel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Cancel.setText("Cancel");
        btn_Cancel.setBorder(null);
        btn_Cancel.setBorderPainted(false);
        btn_Cancel.setContentAreaFilled(false);
        btn_Cancel.setFocusPainted(false);
        btn_Cancel.setOpaque(true);
        btn_Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_CancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_CancelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_CancelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_CancelMouseReleased(evt);
            }
        });
        panel.add(btn_Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 560, 140, 30));

        btn_Save.setBackground(new java.awt.Color(38, 57, 75));
        btn_Save.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Save.setForeground(new java.awt.Color(255, 255, 255));
        btn_Save.setText("Save");
        btn_Save.setBorder(null);
        btn_Save.setBorderPainted(false);
        btn_Save.setContentAreaFilled(false);
        btn_Save.setFocusPainted(false);
        btn_Save.setOpaque(true);
        btn_Save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_SaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_SaveMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_SaveMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_SaveMouseReleased(evt);
            }
        });
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });
        panel.add(btn_Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 600, 140, 30));

        jLabel38.setFont(new java.awt.Font("Calibri", 1, 17)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 153, 51));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel38.setText("Balance");
        panel.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 580, 60, 40));

        balance.setEditable(false);
        balance.setBackground(new java.awt.Color(255, 255, 255));
        balance.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        balance.setForeground(new java.awt.Color(39, 55, 70));
        balance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        balance.setText("0.00");
        panel.add(balance, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 580, 230, 40));

        customer_Name.setEditable(true);
        customer_Name.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        customer_Name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select a Customer -" }));
        customer_Name.setFocusable(false);
        customer_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_NameActionPerformed(evt);
            }
        });
        panel.add(customer_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 300, 25));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(52, 73, 94));
        jLabel2.setText("Invoice");
        panel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 130, 50));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        table.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Print Type", "Printing Quality", "Unit Price", "Square Feets", "Quantity", "Discount", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table.setOpaque(false);
        table.setRowHeight(25);
        table.setRowMargin(0);
        table.setShowHorizontalLines(false);
        table.setShowVerticalLines(false);
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(0).setPreferredWidth(60);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(1).setPreferredWidth(190);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(2).setPreferredWidth(190);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(3).setPreferredWidth(100);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(4).setPreferredWidth(150);
            table.getColumnModel().getColumn(5).setResizable(false);
            table.getColumnModel().getColumn(5).setPreferredWidth(100);
            table.getColumnModel().getColumn(6).setResizable(false);
            table.getColumnModel().getColumn(6).setPreferredWidth(150);
            table.getColumnModel().getColumn(7).setResizable(false);
            table.getColumnModel().getColumn(7).setPreferredWidth(197);
        }

        panel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 1060, 350));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel1.setText("Print Type");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        panel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 70, 20));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel5.setText("Printing Quality");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        panel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 110, 20));

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel3.setText("Width");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        panel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 50, 20));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel4.setText("Height");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        panel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(725, 110, 50, 20));

        qty.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        qty.setForeground(new java.awt.Color(39, 55, 70));
        qty.setToolTipText("Enter the Number of Banners / Stickers");
        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyKeyTyped(evt);
            }
        });
        panel.add(qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 130, 125, 25));

        paidAmount.setForeground(new java.awt.Color(39, 55, 70));
        paidAmount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.##"))));
        paidAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        paidAmount.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        paidAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidAmountActionPerformed(evt);
            }
        });
        paidAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paidAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paidAmountKeyTyped(evt);
            }
        });
        panel.add(paidAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 540, 230, 30));

        printType.setEditable(true);
        printType.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        printType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select -" }));
        printType.setFocusable(false);
        printType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printTypeActionPerformed(evt);
            }
        });
        panel.add(printType, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 200, 25));

        discount.setForeground(new java.awt.Color(39, 55, 70));
        discount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#.##"))));
        discount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        discount.setText("0");
        discount.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });
        discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                discountKeyTyped(evt);
            }
        });
        panel.add(discount, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 580, 200, 30));

        height_of_banner.setForeground(new java.awt.Color(39, 55, 70));
        height_of_banner.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#.##"))));
        height_of_banner.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        height_of_banner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                height_of_bannerActionPerformed(evt);
            }
        });
        height_of_banner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                height_of_bannerKeyTyped(evt);
            }
        });
        panel.add(height_of_banner, new org.netbeans.lib.awtextra.AbsoluteConstraints(725, 130, 125, 25));

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel8.setText("Quantity");
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        panel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 110, 70, 20));

        add_customer.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        add_customer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/add_cus.png"))); // NOI18N
        add_customer.setToolTipText("Add New Customer");
        add_customer.setContentAreaFilled(false);
        add_customer.setFocusPainted(false);
        add_customer.setMargin(new java.awt.Insets(2, 2, 2, 2));
        add_customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_customerActionPerformed(evt);
            }
        });
        panel.add(add_customer, new org.netbeans.lib.awtextra.AbsoluteConstraints(465, 65, 32, 32));

        invoice_Type.setBackground(new java.awt.Color(243, 246, 248));
        invoice_Type.setEditable(true);
        invoice_Type.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        invoice_Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal Invoice", "Digital Printing" }));
        invoice_Type.setSelectedIndex(1);
        invoice_Type.setToolTipText("Select the Invoice Type");
        invoice_Type.setFocusable(false);
        invoice_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoice_TypeActionPerformed(evt);
            }
        });
        panel.add(invoice_Type, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 160, 25));

        width_of_banner.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        width_of_banner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                width_of_bannerActionPerformed(evt);
            }
        });
        width_of_banner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                width_of_bannerKeyTyped(evt);
            }
        });
        panel.add(width_of_banner, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 130, 125, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_SaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMouseReleased
        btn_Save.setBackground(new Color(38, 57, 75));
    }//GEN-LAST:event_btn_SaveMouseReleased

    private void btn_SaveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMousePressed
        btn_Save.setBackground(new Color(21, 67, 96));
    }//GEN-LAST:event_btn_SaveMousePressed

    private void btn_SaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMouseExited
        btn_Save.setBackground(new Color(38, 57, 75));
    }//GEN-LAST:event_btn_SaveMouseExited

    private void btn_SaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMouseEntered
        btn_Save.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_SaveMouseEntered

    private void btn_CancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseReleased
        btn_Cancel.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_CancelMouseReleased

    private void btn_CancelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMousePressed
        btn_Cancel.setBackground(new Color(98, 101, 103));
    }//GEN-LAST:event_btn_CancelMousePressed

    private void btn_CancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseExited
        btn_Cancel.setBackground(new Color(179, 182, 183));
    }//GEN-LAST:event_btn_CancelMouseExited

    private void btn_CancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseEntered
        btn_Cancel.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_CancelMouseEntered

    private void height_of_bannerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_height_of_bannerKeyTyped
        Validation.setDecimalNumbersOnly(evt);
        Validation.setLength(evt, height_of_banner.getText(), 6);
    }//GEN-LAST:event_height_of_bannerKeyTyped

    private void qtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyTyped
        Validation.setDigitsOnly(evt);
        Validation.setLength(evt, qty.getText(), 6);
    }//GEN-LAST:event_qtyKeyTyped

    private void discountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyTyped
        Validation.setDecimalNumbersOnly(evt);
        Validation.setLength(evt, discount.getText(), 6);
    }//GEN-LAST:event_discountKeyTyped

    private void paidAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paidAmountKeyTyped
        Validation.setDecimalNumbersOnly(evt);
    }//GEN-LAST:event_paidAmountKeyTyped

    private void customer_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_NameActionPerformed
        customerId = customer_Name.getSelectedItem().toString().split(" - ")[0];
    }//GEN-LAST:event_customer_NameActionPerformed

    private void qualityOfPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qualityOfPrintActionPerformed
        String p_type = printType.getSelectedItem().toString().split(" - ")[0];
        String p_quality = qualityOfPrint.getSelectedItem().toString().split(" - ")[0];

        if (printType.getSelectedIndex() != 0 || qualityOfPrint.getSelectedIndex() != 0) {
            try {
                ResultSet rs = DB.search("SELECT id, price FROM print_price WHERE type_id = '" + p_type + "' AND quality_id = '" + p_quality + "'");
                if (rs.next()) {
                    printPrice_id = rs.getString("id");
                    price = rs.getDouble("price");
                } else {
                    JOptionPane.showMessageDialog(this, "Not Found Match items", "Error", JOptionPane.WARNING_MESSAGE);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        width_of_banner.grabFocus();
    }//GEN-LAST:event_qualityOfPrintActionPerformed

    private void height_of_bannerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_height_of_bannerActionPerformed
        qty.grabFocus();
        qty.setText("1");
    }//GEN-LAST:event_height_of_bannerActionPerformed

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        if (!(width_of_banner.getText().isEmpty() && height_of_banner.getText().isEmpty() && price == 0)) {
            Vector v = new Vector();
            v.add(printPrice_id);
            v.add(printType.getSelectedItem().toString().split(" - ")[1]);
            v.add(qualityOfPrint.getSelectedItem().toString().split(" - ")[1]);
            v.add(decimalformat.format(price));
            double sqFeets = Double.parseDouble(width_of_banner.getText()) * Double.parseDouble(height_of_banner.getText());
            v.add(sqFeets);
            v.add(qty.getText());
            v.add("0.00");
            v.add(decimalformat.format(sqFeets * price * Double.parseDouble(qty.getText())));
            dtm.addRow(v);

            getSubTotal();
            getNetTotal();

            // clear 
            printType.setSelectedIndex(0);
            qualityOfPrint.setSelectedIndex(0);
            width_of_banner.setText(null);
            height_of_banner.setText(null);
            qty.setText(null);
            price = 0;
            jLabel1.grabFocus();
        }
    }//GEN-LAST:event_qtyActionPerformed

    private void discountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyReleased
        if (!discount.getText().isEmpty() && Double.parseDouble(discount.getText()) < 101) {
            double pecentage = Double.parseDouble(discount.getText());
            double subAmount = Double.parseDouble(subTotal.getText().replace(",", ""));
            double netValue = ((100 - pecentage) * subAmount) / 100;
            netTotal.setText(decimalformat.format(netValue));
        }
    }//GEN-LAST:event_discountKeyReleased

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed
        paidAmount.grabFocus();
    }//GEN-LAST:event_discountActionPerformed

    private void paidAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paidAmountKeyReleased
        if (!paidAmount.getText().isEmpty()) {
            balance.setText(decimalformat.format(Double.parseDouble(paidAmount.getText()) - Double.parseDouble(netTotal.getText().replace(",", ""))));
        }
    }//GEN-LAST:event_paidAmountKeyReleased

    private void paidAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidAmountActionPerformed
        btn_Save.grabFocus();
    }//GEN-LAST:event_paidAmountActionPerformed

    private void add_customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_customerActionPerformed
        AddCustomer_QuickView add = new AddCustomer_QuickView(menu,  this);
        add.setVisible(true);
    }//GEN-LAST:event_add_customerActionPerformed

    private void invoice_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoice_TypeActionPerformed
        if (invoice_Type.getSelectedIndex() == 0) {
            if (table.getRowCount() == 0) {
                Invoice rep = new Invoice(menu);
                menu.view.removeAll();
                menu.view.revalidate();
                menu.view.repaint();
                menu.view.add((JPanel) rep.panel);
            } else if (JOptionPane.showConfirmDialog(menu, "Unsaved activities available here, Do you want save that?", "Save", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 1) {
                Invoice rep = new Invoice(menu);
                menu.view.removeAll();
                menu.view.revalidate();
                menu.view.repaint();
                menu.view.add((JPanel) rep.panel);
            }

        }
    }//GEN-LAST:event_invoice_TypeActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (evt.getClickCount() == 2) {
            new Item_Discount(this, menu,
                    table.getValueAt(table.getSelectedRow(), 7).toString(),
                    table.getSelectedRow()).setVisible(true);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        if (customerId == null) {
            JOptionPane.showMessageDialog(this, "Select the customer before save", "Select the customer", JOptionPane.WARNING_MESSAGE);
        } else {
            SimpleDateFormat time = new SimpleDateFormat("HH:mm:ss");
            String paymentType = "Cash";

            try {
                DB.iud("INSERT INTO invoice VALUES('" + invoice_ID.getText() + "','" + customerId + "','" + paymentType
                        + "','" + subTotal.getText().replace(",", "") + "','" + discount.getText() + "','" + netTotal.getText().replace(",", "") + "','" + paidAmount.getText()
                        + "','" + balance.getText().replace(",", "") + "','" + dateFomrmat.format(new Date()) + "','" + time.format(new Date()) + "', '1', 'Printing' )");

                for (int i = 0; i < table.getRowCount(); i++) {
                    DB.iud("INSERT INTO invoice_item_printing (id_invoice, print_price, qty, unit_price, squre_feets, discount, amount) "
                            + "VALUES('" + invoice_ID.getText() + "', '" + table.getValueAt(i, 0).toString() + "', '" + table.getValueAt(i, 5).toString() + "', '" + table.getValueAt(i, 3).toString().replace(",", "")
                            + "', '" + table.getValueAt(i, 4).toString() + "', '" + table.getValueAt(i, 6).toString() + "', '" + table.getValueAt(i, 7).toString().replace(",", "") + "')");
                }
                new Save().setVisible(true);
                printInvoice();
                clearAlll();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_SaveActionPerformed

    private void width_of_bannerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_width_of_bannerActionPerformed
        height_of_banner.grabFocus();
    }//GEN-LAST:event_width_of_bannerActionPerformed

    private void width_of_bannerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_width_of_bannerKeyTyped
        Validation.setDecimalNumbersOnly(evt);
    }//GEN-LAST:event_width_of_bannerKeyTyped

    private void printTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Invoice_Digital_Printing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Invoice_Digital_Printing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Invoice_Digital_Printing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Invoice_Digital_Printing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Invoice_Digital_Printing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_customer;
    private javax.swing.JTextField balance;
    private javax.swing.JButton btn_Cancel;
    private javax.swing.JButton btn_Save;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> customer_Name;
    private javax.swing.JFormattedTextField discount;
    private javax.swing.JFormattedTextField height_of_banner;
    private javax.swing.JLabel invoice_ID;
    private javax.swing.JComboBox<String> invoice_Type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField netTotal;
    private javax.swing.JFormattedTextField paidAmount;
    public javax.swing.JPanel panel;
    private javax.swing.JComboBox<String> printType;
    private javax.swing.JTextField qty;
    private javax.swing.JComboBox<String> qualityOfPrint;
    private javax.swing.JTextField subTotal;
    private javax.swing.JTable table;
    private javax.swing.JTextField width_of_banner;
    // End of variables declaration//GEN-END:variables

    private void tableSettings() {
        JTableHeader tableHeader = table.getTableHeader();
        tableHeader.setFont(new Font("Calibri", Font.BOLD, 14));
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer center = new DefaultTableCellRenderer();
        center.setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer right = new DefaultTableCellRenderer();
        right.setHorizontalAlignment(JLabel.RIGHT);

        table.getColumnModel().getColumn(0).setCellRenderer(center);
        table.getColumnModel().getColumn(1).setCellRenderer(center);
        table.getColumnModel().getColumn(2).setCellRenderer(center);
        table.getColumnModel().getColumn(3).setCellRenderer(right);
        table.getColumnModel().getColumn(4).setCellRenderer(right);
        table.getColumnModel().getColumn(5).setCellRenderer(center);
        table.getColumnModel().getColumn(6).setCellRenderer(right);
        table.getColumnModel().getColumn(7).setCellRenderer(right);
    }

    private void generateID() {

        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMM");
        try {
            ResultSet rs = DB.search("SELECT COUNT(id_invoice) AS id FROM invoice");
            if (rs.next()) {
                int rowCount = rs.getInt("id");
                rowCount++;
                invoice_ID.setText(sdf.format(new Date()) + String.format("%0" + 5 + "d", rowCount));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadCustomers() {
        try {
            ResultSet rs = DB.search("SELECT id_customer,fname, lname FROM customer WHERE state = '1' ");
            while (rs.next()) {
                customer_Name.addItem(rs.getString("id_customer") + " - " + rs.getString("fname") + " " + rs.getString("lname"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadPrintTypes() {
        try {
            ResultSet rs = DB.search("SELECT * FROM print_type");
            while (rs.next()) {
                printType.addItem(rs.getString("id") + " - " + rs.getString("type"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadPrintQualities() {
        try {
            ResultSet rs = DB.search("SELECT * FROM print_quality");
            while (rs.next()) {
                qualityOfPrint.addItem(rs.getString("id") + " - " + rs.getString("quality"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getSubTotal() {
        double tot = 0;
        for (int i = 0; i < table.getRowCount(); i++) {
            tot += Double.parseDouble(table.getValueAt(i, 7).toString().replace(",", ""));
        }
        subTotal.setText(decimalformat.format(tot));
    }

    private void getNetTotal() {
        if (!discount.getText().isEmpty() && Double.parseDouble(discount.getText()) < 101) {
            double pecentage = Double.parseDouble(discount.getText());
            double subAmount = Double.parseDouble(subTotal.getText().replace(",", ""));
            double netValue = ((100 - pecentage) * subAmount) / 100;
            netTotal.setText(decimalformat.format(netValue));
        }
    }

    private void clearAlll() {
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        generateID();
        customer_Name.setSelectedIndex(1);
        dtm.setRowCount(0);
        subTotal.setText("0");
        discount.setText("0");
        netTotal.setText("0");
        paidAmount.setText("0");
        balance.setText("0.00");
    }

    public void discounts(String discount, String amount, int row) {
        table.setValueAt(discount, row, 6);
        table.setValueAt(amount, row, 7);
        getSubTotal();
        getNetTotal();
    }

    private void printInvoice() {
        menu.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            String path = "jasperReports\\Invoice_Printing.jrxml";

            String s = new File(path).getAbsolutePath().replace("\\", "\\\\");
            String subReportpath = (s.split("Invoice_Printing.jrxml"))[0];

            Map<String, Object> m = new HashMap();
            m.put("subPath", subReportpath); // send subReport path
            m.put("invoice_no", invoice_ID.getText());
            m.put("isPrintCopy", "");

            JasperReport cp = JasperCompileManager.compileReport(path);
            JasperPrint fr = JasperFillManager.fillReport(cp, m, DB.getConnection());
            JasperViewer.viewReport(fr, false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        menu.setCursor(null);
    }

}
