package GUI;

import Database.DB;
import Model.Save;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.io.File;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

public class Sales_Returns extends javax.swing.JFrame {

    private final DecimalFormat decimalformat = new DecimalFormat("00.00");
    private double totalValue;
    private Main menu;

    public Sales_Returns() {
        initComponents();
        generateId();
        tableSettings();
        date.setDate(new Date());
        loadInvoice();

        JTextFieldDateEditor f = (JTextFieldDateEditor) date.getDateEditor();
        f.setEditable(false);
        f.setBackground(Color.WHITE);
    }

    public Sales_Returns(Main menu) {
        this();
        this.menu = menu;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        invoiceIdjScrollPane1 = new javax.swing.JScrollPane();
        invoiceIdjList1 = new javax.swing.JList<>();
        invoiceTime = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        jScrollPane4 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btn_Cancel = new javax.swing.JButton();
        btn_Save = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txt_SRNvalue = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        srnNo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        invoiceValue = new javax.swing.JLabel();
        invoiceDate = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        invoiceId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setMaximumSize(new java.awt.Dimension(1024, 768));
        panel.setMinimumSize(new java.awt.Dimension(1024, 768));
        panel.setPreferredSize(new java.awt.Dimension(1024, 768));
        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        invoiceIdjList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceIdjList1MouseClicked(evt);
            }
        });
        invoiceIdjList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                invoiceIdjList1KeyPressed(evt);
            }
        });
        invoiceIdjScrollPane1.setViewportView(invoiceIdjList1);

        panel.add(invoiceIdjScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 200, -1));

        invoiceTime.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        panel.add(invoiceTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 190, 110, 25));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(66, 73, 73));
        jLabel5.setText("Invoice No");
        panel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 80, 25));

        date.setDateFormatString("yyyy-MM-dd");
        date.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        panel.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 180, 25));

        table.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock ID", "Product Code", "Product", "Unit", "Unit Price", "Discount", "Quantity", "Return Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table.setGridColor(new java.awt.Color(204, 204, 204));
        table.setRowHeight(30);
        table.setSelectionBackground(new java.awt.Color(41, 128, 185));
        table.setShowHorizontalLines(false);
        table.setShowVerticalLines(false);
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(88);
            table.getColumnModel().getColumn(1).setPreferredWidth(150);
            table.getColumnModel().getColumn(2).setPreferredWidth(300);
            table.getColumnModel().getColumn(3).setPreferredWidth(70);
            table.getColumnModel().getColumn(4).setPreferredWidth(80);
            table.getColumnModel().getColumn(6).setPreferredWidth(100);
            table.getColumnModel().getColumn(7).setPreferredWidth(250);
        }

        panel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 1100, 360));

        btn_Cancel.setBackground(new java.awt.Color(179, 182, 183));
        btn_Cancel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Cancel.setText("Cancel");
        btn_Cancel.setBorder(null);
        btn_Cancel.setBorderPainted(false);
        btn_Cancel.setContentAreaFilled(false);
        btn_Cancel.setFocusPainted(false);
        btn_Cancel.setOpaque(true);
        btn_Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_CancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_CancelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_CancelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_CancelMouseReleased(evt);
            }
        });
        btn_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancelActionPerformed(evt);
            }
        });
        panel.add(btn_Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 90, 90, 30));

        btn_Save.setBackground(new java.awt.Color(41, 128, 185));
        btn_Save.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Save.setForeground(new java.awt.Color(255, 255, 255));
        btn_Save.setText("Return");
        btn_Save.setBorder(null);
        btn_Save.setBorderPainted(false);
        btn_Save.setContentAreaFilled(false);
        btn_Save.setFocusPainted(false);
        btn_Save.setOpaque(true);
        btn_Save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_SaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_SaveMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_SaveMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_SaveMouseReleased(evt);
            }
        });
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });
        panel.add(btn_Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 90, 90, 30));

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(66, 73, 73));
        jLabel8.setText("Total SRN  Value");
        panel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 650, 120, 30));

        txt_SRNvalue.setEditable(false);
        txt_SRNvalue.setBackground(new java.awt.Color(255, 255, 255));
        txt_SRNvalue.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        txt_SRNvalue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        panel.add(txt_SRNvalue, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 650, 170, 30));

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(52, 73, 94));
        jLabel6.setText("Sales Returns");
        panel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 360, 50));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(66, 73, 73));
        jLabel4.setText("SRN No");
        panel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 60, 25));

        srnNo.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        srnNo.setForeground(new java.awt.Color(66, 73, 73));
        panel.add(srnNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 200, 25));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(66, 73, 73));
        jLabel7.setText("Date");
        panel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 40, 25));

        invoiceValue.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        invoiceValue.setForeground(new java.awt.Color(66, 73, 73));
        invoiceValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        invoiceValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        panel.add(invoiceValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 190, 140, 25));

        invoiceDate.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        invoiceDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        panel.add(invoiceDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 190, 110, 25));

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(66, 73, 73));
        jLabel10.setText("Invoice Date");
        panel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, 90, 25));

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(66, 73, 73));
        jLabel11.setText("Invoice Value");
        panel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, 90, 25));
        panel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 1040, 10));

        invoiceId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                invoiceIdKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invoiceIdKeyReleased(evt);
            }
        });
        panel.add(invoiceId, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 200, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1166, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_CancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseEntered
        btn_Cancel.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_CancelMouseEntered

    private void btn_CancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseExited
        btn_Cancel.setBackground(new Color(179, 182, 183));
    }//GEN-LAST:event_btn_CancelMouseExited

    private void btn_CancelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMousePressed
        btn_Cancel.setBackground(new Color(98, 101, 103));
    }//GEN-LAST:event_btn_CancelMousePressed

    private void btn_CancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CancelMouseReleased
        btn_Cancel.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_CancelMouseReleased

    private void btn_SaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMouseEntered
        btn_Save.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_SaveMouseEntered

    private void btn_SaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMouseExited
        btn_Save.setBackground(new Color(41, 128, 185));
    }//GEN-LAST:event_btn_SaveMouseExited

    private void btn_SaveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMousePressed
        btn_Save.setBackground(new Color(21, 67, 96));
    }//GEN-LAST:event_btn_SaveMousePressed

    private void btn_SaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveMouseReleased
        btn_Save.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_SaveMouseReleased

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (table.getRowCount() != 0) {
            getSRNValue();
        }
    }//GEN-LAST:event_tableMouseClicked

    private void tableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyReleased
        if (table.getRowCount() != 0) {
            getSRNValue();
        }
    }//GEN-LAST:event_tableKeyReleased

    private void btn_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancelActionPerformed
        clearText();

    }//GEN-LAST:event_btn_CancelActionPerformed

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
        if (invoiceId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Select an invoice", "Select Invoice to Return", JOptionPane.WARNING_MESSAGE);
        } else {
            if (txt_SRNvalue.getText().equals("00.00") | txt_SRNvalue.getText().equals("0.00") | txt_SRNvalue.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No return quantities, Check it again");
            } else {
                if (JOptionPane.showConfirmDialog(this, "Are you sure?, you want Return this items", "Return the Invoice", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {

                    try {
                        DB.iud("INSERT INTO sales_return VALUES ('" + srnNo.getText() + "','" + invoiceId.getText().toString() + "','" + dateFormat.format(new Date()) + "','" + timeFormat.format(new Date()) + "','" + txt_SRNvalue.getText() + "')");

                        for (int i = 0; i < table.getRowCount(); i++) {
                            if (Integer.parseInt(table.getValueAt(i, 7).toString()) != 0) {
                                double returnQty = Double.parseDouble(table.getValueAt(i, 7).toString());
                                double unitPrice = Double.parseDouble(table.getValueAt(i, 4).toString());
                                double discount = Double.parseDouble(table.getValueAt(i, 5).toString());
                                double crrqty = Double.parseDouble(table.getValueAt(i, 6).toString());
//                                double returnItemValue = Double.parseDouble(table.getValueAt(i, 4).toString()) * Double.parseDouble(table.getValueAt(i, 7).toString());
                                double returnItemValue = (unitPrice - (discount / crrqty)) * returnQty;
                                DB.iud("INSERT INTO sales_return_items (id_srn, id_stock, unit, qty, value) VALUES('" + srnNo.getText() + "','" + table.getValueAt(i, 0).toString() + "','" + table.getValueAt(i, 3).toString() + "','" + table.getValueAt(i, 7).toString() + "','" + returnItemValue + "') ");
                                DB.iud("UPDATE product_stock SET qty = qty + '" + table.getValueAt(i, 7).toString() + "' WHERE idproduct_stock = '" + table.getValueAt(i, 0).toString() + "' ");
                            }
                        }
                        new Save().setVisible(true);
                        printReport();
                        clearText();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }//GEN-LAST:event_btn_SaveActionPerformed

    private void invoiceIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceIdKeyPressed
        if (evt.getKeyCode() == 40) {
            invoiceIdjList1.grabFocus();
            invoiceIdjList1.setSelectedIndex(0);
        } else if (evt.getKeyCode() == 10) {
            invoiceIdjScrollPane1.setVisible(false);
        }
    }//GEN-LAST:event_invoiceIdKeyPressed

    private void invoiceIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceIdKeyReleased
        if (evt.getKeyCode() != 10) {
            loadInvoice();
        }
    }//GEN-LAST:event_invoiceIdKeyReleased

    private void invoiceIdjList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceIdjList1KeyPressed
        if (evt.getKeyCode() == 10) {
            invoiceId.setText(invoiceIdjList1.getSelectedValue());
            invoiceIdjScrollPane1.setVisible(false);
            viewInvoiceData(invoiceId.getText());
        }
    }//GEN-LAST:event_invoiceIdjList1KeyPressed

    private void invoiceIdjList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceIdjList1MouseClicked
        invoiceId.setText(invoiceIdjList1.getSelectedValue());
        invoiceIdjScrollPane1.setVisible(false);
        viewInvoiceData(invoiceId.getText());
    }//GEN-LAST:event_invoiceIdjList1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sales_Returns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sales_Returns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sales_Returns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sales_Returns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sales_Returns().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Cancel;
    private javax.swing.JButton btn_Save;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JLabel invoiceDate;
    private javax.swing.JTextField invoiceId;
    private javax.swing.JList<String> invoiceIdjList1;
    private javax.swing.JScrollPane invoiceIdjScrollPane1;
    private javax.swing.JLabel invoiceTime;
    private javax.swing.JLabel invoiceValue;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JPanel panel;
    private javax.swing.JLabel srnNo;
    private javax.swing.JTable table;
    private javax.swing.JTextField txt_SRNvalue;
    // End of variables declaration//GEN-END:variables

    private void tableSettings() {
        JTableHeader tableHeader = table.getTableHeader();
        tableHeader.setFont(new Font("Calibri", Font.BOLD, 14));
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer center = new DefaultTableCellRenderer();
        center.setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer right = new DefaultTableCellRenderer();
        right.setHorizontalAlignment(JLabel.RIGHT);

        table.getColumnModel().getColumn(0).setCellRenderer(center);
        table.getColumnModel().getColumn(3).setCellRenderer(center);
        table.getColumnModel().getColumn(5).setCellRenderer(center);
        table.getColumnModel().getColumn(4).setCellRenderer(right);
        table.getColumnModel().getColumn(6).setCellRenderer(right);
        table.getColumnModel().getColumn(7).setCellRenderer(center);
    }

    private void generateId() {
        try {
            ResultSet rs = DB.search("SELECT COUNT(id_srn) AS x FROM sales_return");
            if (rs.next()) {
                int rowCount = rs.getInt("x");
                rowCount++;
                srnNo.setText("SRN" + String.format("%0" + 6 + "d", rowCount));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadInvoice() {
        try {

            if (invoiceId.getText().isEmpty()) {
                invoiceIdjScrollPane1.setVisible(false);

            } else {
                ResultSet rs = DB.search("SELECT id_invoice FROM invoice where id_invoice like '%" + invoiceId.getText() + "%' and state='1' AND type = 'Normal' ORDER BY `date` DESC");

                boolean value = rs.next();
                if (value == false) {
                    invoiceIdjScrollPane1.setVisible(false);
                    JOptionPane.showMessageDialog(null, "Invalid product name", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
                Vector v = new Vector();
                while (value) {
                    String grnid = rs.getString(1);
                    v.add(grnid);
                    invoiceIdjList1.setListData(v);
                    invoiceIdjScrollPane1.setVisible(true);

                    value = rs.next();
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void viewInvoiceData(String invoiceNo) {
        SimpleDateFormat time24format = new SimpleDateFormat("HH:mm:ss");
        SimpleDateFormat time12format = new SimpleDateFormat("hh:mm:ss aa");
        try {
            ResultSet rs = DB.search(" SELECT net_total, `date`, `time` FROM invoice WHERE id_invoice = '" + invoiceNo + "' ");
            if (rs.next()) {
                invoiceValue.setText(decimalformat.format(rs.getDouble(1)));
                invoiceDate.setText(rs.getString(2));
                invoiceTime.setText(time12format.format(time24format.parse(rs.getString(3))));
            }

            DefaultTableModel dtm = (DefaultTableModel) table.getModel();
            dtm.setRowCount(0);

            ResultSet rs2 = DB.search(" SELECT invoice_item.idproduct_stock, product.id_product, product.productname, invoice_item.unit, product_stock.retail_price, invoice_item.qty,"
                    + " invoice_item.value  FROM invoice_item INNER JOIN product_stock ON invoice_item.idproduct_stock = product_stock.idproduct_stock"
                    + " INNER JOIN product ON product_stock.id_product=product.id_product WHERE invoice_item.id_invoice = '" + invoiceNo + "' ");
            while (rs2.next()) {
                Vector v = new Vector();
                v.add(rs2.getString(1));
                v.add(rs2.getString(2));
                v.add(rs2.getString(3));
                v.add(rs2.getString(4));
                v.add(decimalformat.format(rs2.getDouble(5)));
                v.add(decimalformat.format(rs2.getDouble(7)));
                v.add(rs2.getString(6));
                v.add("0");
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getSRNValue() {
        totalValue = 0;
        for (int i = 0; i < table.getRowCount(); i++) {
            double returnQty = Double.parseDouble(table.getValueAt(i, 7).toString());
            double unitPrice = Double.parseDouble(table.getValueAt(i, 4).toString());
            double discount = Double.parseDouble(table.getValueAt(i, 5).toString());
            double crrqty = Double.parseDouble(table.getValueAt(i, 6).toString());
            if (returnQty > crrqty) {
                JOptionPane.showMessageDialog(this, "Return quantity is invalid", "Please check return quantity", JOptionPane.WARNING_MESSAGE);
                table.setValueAt(0, i, 7);
            } else {
                totalValue = totalValue + ((unitPrice - (discount / crrqty)) * returnQty);
            }
        }
        txt_SRNvalue.setText(decimalformat.format(totalValue));
    }

    private void clearText() {
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        generateId();
        invoiceId.setText("");
        invoiceValue.setText(null);
        invoiceDate.setText(null);
        dtm.setRowCount(0);
        txt_SRNvalue.setText("00.00");

    }

    private void printReport() {
        menu.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            String path = "jasperReports\\SalesReturn.jrxml";

            String s = new File(path).getAbsolutePath().replace("\\", "\\\\");
            String subReportpath = (s.split("SalesReturn.jrxml"))[0];

            Map<String, Object> m = new HashMap();
            m.put("subPath", subReportpath); // send subReport path
            m.put("srn_id", srnNo.getText());

            JasperReport cp = JasperCompileManager.compileReport(path);
            JasperPrint fr = JasperFillManager.fillReport(cp, m, DB.getConnection());
            JasperViewer.viewReport(fr, false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        menu.setCursor(null);
    }
}
