package GUI;

import Database.DB;
import Model.Save;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

public class Users extends javax.swing.JFrame {

    private Main menu;

    public Users() {
        initComponents();
        tableSettings();
        loadUsers();
        table.grabFocus();
    }

    public Users(Main m) {
        this();
        this.menu = m;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        btn_ChangeState = new javax.swing.JButton();
        btn_Add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        searchBox = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setMaximumSize(new java.awt.Dimension(1080, 660));
        panel.setMinimumSize(new java.awt.Dimension(1080, 660));
        panel.setPreferredSize(new java.awt.Dimension(1080, 660));
        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_ChangeState.setBackground(new java.awt.Color(179, 182, 183));
        btn_ChangeState.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_ChangeState.setText("Deactivate");
        btn_ChangeState.setBorder(null);
        btn_ChangeState.setBorderPainted(false);
        btn_ChangeState.setContentAreaFilled(false);
        btn_ChangeState.setFocusPainted(false);
        btn_ChangeState.setOpaque(true);
        btn_ChangeState.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_ChangeStateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_ChangeStateMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_ChangeStateMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_ChangeStateMouseReleased(evt);
            }
        });
        btn_ChangeState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChangeStateActionPerformed(evt);
            }
        });
        panel.add(btn_ChangeState, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 120, 120, 35));

        btn_Add.setBackground(new java.awt.Color(41, 128, 185));
        btn_Add.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Add.setForeground(new java.awt.Color(255, 255, 255));
        btn_Add.setText("+  Add User");
        btn_Add.setBorder(null);
        btn_Add.setBorderPainted(false);
        btn_Add.setContentAreaFilled(false);
        btn_Add.setFocusPainted(false);
        btn_Add.setOpaque(true);
        btn_Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_AddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_AddMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_AddMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_AddMouseReleased(evt);
            }
        });
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });
        panel.add(btn_Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 120, 120, 35));

        table.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Employee Name", "User Name", "Role", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table.setRowHeight(35);
        table.setShowHorizontalLines(false);
        table.setShowVerticalLines(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(40);
            table.getColumnModel().getColumn(1).setPreferredWidth(250);
            table.getColumnModel().getColumn(2).setPreferredWidth(250);
            table.getColumnModel().getColumn(3).setPreferredWidth(250);
            table.getColumnModel().getColumn(4).setPreferredWidth(250);
        }

        panel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 1040, 440));

        searchBox.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        searchBox.setForeground(new java.awt.Color(39, 55, 70));
        searchBox.setText("Search");
        searchBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchBoxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchBoxFocusLost(evt);
            }
        });
        searchBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBoxKeyReleased(evt);
            }
        });
        panel.add(searchBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 290, 35));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(52, 73, 94));
        jLabel2.setText("Users");
        panel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 290, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1166, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AddMouseEntered
        btn_Add.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_AddMouseEntered

    private void btn_AddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AddMouseExited
        btn_Add.setBackground(new Color(41, 128, 185));
    }//GEN-LAST:event_btn_AddMouseExited

    private void btn_AddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AddMousePressed
        btn_Add.setBackground(new Color(21, 67, 96));
    }//GEN-LAST:event_btn_AddMousePressed

    private void btn_AddMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AddMouseReleased
        btn_Add.setBackground(new Color(31, 97, 141));
    }//GEN-LAST:event_btn_AddMouseReleased

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        Create_User us = new Create_User(menu, this);
        us.setVisible(true);
    }//GEN-LAST:event_btn_AddActionPerformed

    private void searchBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchBoxFocusGained
        searchBox.setText(null);
    }//GEN-LAST:event_searchBoxFocusGained

    private void searchBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchBoxFocusLost
        if (searchBox.getText().equals("")) {
            searchBox.setText(" Search");
        }
    }//GEN-LAST:event_searchBoxFocusLost

    private void btn_ChangeStateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ChangeStateMouseEntered
        btn_ChangeState.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_ChangeStateMouseEntered

    private void btn_ChangeStateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ChangeStateMouseExited
        btn_ChangeState.setBackground(new Color(179, 182, 183));
    }//GEN-LAST:event_btn_ChangeStateMouseExited

    private void btn_ChangeStateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ChangeStateMousePressed
        btn_ChangeState.setBackground(new Color(98, 101, 103));
    }//GEN-LAST:event_btn_ChangeStateMousePressed

    private void btn_ChangeStateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ChangeStateMouseReleased
        btn_ChangeState.setBackground(new Color(144, 148, 151));
    }//GEN-LAST:event_btn_ChangeStateMouseReleased

    private void btn_ChangeStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChangeStateActionPerformed

        if (btn_ChangeState.getText().equals("Deactivate")) {
            if (table.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "First select the user", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                int selectRow = table.getSelectedRow();
                if (table.getValueAt(selectRow, 4).equals("Active")) {
                    if (JOptionPane.showConfirmDialog(this, "Are you sure,you want deactivate this user", "Deactivate User", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
                        try {
                            DB.iud("UPDATE user SET state='0' WHERE user_name='" + table.getValueAt(selectRow, 2) + "' ");
                            new Save().setVisible(true);
                            loadUsers();
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    } else {
                        loadUsers();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "This user already Deactivated", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }

        } else if (btn_ChangeState.getText().equals("Activate")) {

            if (JOptionPane.showConfirmDialog(this, "Are you sure,you want Activate this user", "Activate User", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
                try {
                    DB.iud("UPDATE user SET state='1' WHERE user_name='" + table.getValueAt(table.getSelectedRow(), 2) + "' ");
                    new Save().setVisible(true);
                    loadUsers();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                loadUsers();
            }
        }
        btn_ChangeState.setText("Deactivate");
    }//GEN-LAST:event_btn_ChangeStateActionPerformed

    private void searchBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBoxKeyReleased
        try {
            DefaultTableModel dtm = (DefaultTableModel) table.getModel();
            ResultSet rs = DB.search("SELECT employee.fname, employee.lname, `user`.user_name, `user`.user_type, `user`.state "
                    + "FROM `user` JOIN employee ON `user`.id_employee=employee.id_employee WHERE `user`.user_name like '" + searchBox.getText() + "%' OR"
                    + "`user`.id_employee like '" + searchBox.getText() + "%' OR employee.fname like '" + searchBox.getText() + "%' OR employee.lname like '" + searchBox.getText() + "%'");
            int rawNo = 0;
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                rawNo++;
                v.add(rawNo);
                v.add(rs.getString(1) + " " + rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                if (rs.getInt(5) == 1) {
                    v.add("Active");
                } else {
                    v.add("Inactive");
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchBoxKeyReleased

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (evt.getClickCount() == 2) {
            try {
                ResultSet rs = DB.search("SELECT state FROM user WHERE user_name='" + table.getValueAt(table.getSelectedRow(), 2).toString() + "'");
                if (rs.next()) {
                    if (rs.getInt("state") == 0) {
                        btn_ChangeState.setText("Activate");
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Users().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_ChangeState;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JPanel panel;
    private javax.swing.JTextField searchBox;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void tableSettings() {
        JTableHeader tableHeader = table.getTableHeader();
        tableHeader.setFont(new Font("Calibri", Font.BOLD, 14));
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer center = new DefaultTableCellRenderer();
        center.setHorizontalAlignment(JLabel.CENTER);

        table.getColumnModel().getColumn(0).setCellRenderer(center);
        table.getColumnModel().getColumn(3).setCellRenderer(center);
        table.getColumnModel().getColumn(4).setCellRenderer(center);
    }

    public void loadUsers() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) table.getModel();
            ResultSet rs = DB.search("SELECT employee.fname, employee.lname, `user`.user_name, `user`.user_type, `user`.state "
                    + "FROM `user` JOIN employee ON `user`.id_employee=employee.id_employee");
            int rawNo = 0;
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                rawNo++;
                v.add(rawNo);
                v.add(rs.getString(1) + " " + rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                if (rs.getInt(5) == 1) {
                    v.add("Active");
                } else {
                    v.add("Inactive");
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
